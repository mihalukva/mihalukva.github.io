{"version":3,"sources":["components/page-layout/index.module.scss","pages/balancers/page/index.module.scss","pages/domains/page/components/table-of-domains/index.module.scss","pages/hosts/page/components/table-of-hosts/index.module.scss","pages/virtual-services/page/components/table-of-balancer/index.module.scss","components/notifications/_components/close-button/index.module.scss","components/logo/index.module.scss","components/side-menu/components/menu-item/index.module.scss","components/circular-preloader/index.module.scss","pages/domains/page/index.module.scss","pages/hosts/page/index.module.scss","pages/virtual-services/page/index.module.scss","components/side-menu/index.module.scss","types/global.ts","constants/ui.ts","components/loading-provider/loaders-dict.ts","store/components/injected-component.tsx","store/hooks/use-inject-reducers.ts","store/hooks/use-inject-sagas.ts","components/search/index.tsx","components/pagination/index.tsx","components/loading-provider/_redux/constants.ts","components/loading-provider/_redux/slice.ts","components/loading-provider/_redux/selectors.ts","components/loading-provider/_hooks/index.ts","components/circular-preloader/index.tsx","pages/balancers/page/components/table-of-balancer/index.tsx","pages/balancers/page/components/create-dialog/index.tsx","pages/balancers/redux/constants.ts","pages/balancers/redux/slice.ts","pages/balancers/redux/selectors.ts","api/utils/queryParamsObjToString.ts","api/config.ts","api/utils/error-schema.ts","api/requests/balancers-get.ts","redux/snackbar/constants.ts","redux/snackbar/selectors.ts","redux/snackbar/slice.ts","pages/balancers/redux/sagas/get-balancer-list/index.ts","pages/balancers/page/index.tsx","pages/balancers/route.ts","store/withInject.tsx","pages/balancers/index.tsx","pages/root/route.ts","pages/root/index.tsx","hooks/use-page-title.ts","pages/domains/page/components/table-of-domains/index.tsx","pages/domains/page/mock.ts","pages/domains/page/index.tsx","pages/domains/route.ts","pages/domains/index.tsx","pages/hosts/page/components/table-of-hosts/index.tsx","pages/hosts/page/mock.ts","pages/hosts/page/index.tsx","pages/hosts/route.ts","pages/hosts/index.tsx","pages/virtual-services/page/components/table-of-balancer/index.tsx","pages/virtual-services/page/mock.ts","pages/virtual-services/page/index.tsx","pages/virtual-services/route.ts","pages/virtual-services/index.tsx","router/routes.ts","router/configure-router.ts","pages/root/node.ts","router/throw-project-and-cluster-plugin.ts","store/root-reducers.ts","store/index.ts","store/create-store.ts","store/utils/inject-reducers/index.ts","store/utils/inject-sagas/index.ts","store/root-sagas.ts","styles/theme.ts","components/notifications/_components/close-button/index.tsx","hooks/use-actions.ts","components/notifications/index.tsx","components/page-builder/index.tsx","components/error-boundary/index.tsx","utils/is-modifier-pressed.ts","hooks/use-on-modified-click.ts","components/logo/index.tsx","components/side-menu/components/menu-item/index.tsx","components/side-menu/index.tsx","components/page-layout/index.tsx","components/connected-page/index.tsx","index.tsx","pages/balancers/page/components/table-of-balancer/index.module.scss"],"names":["module","exports","NotificationsErrorLevel","LoadersDict","NOTIFICATIONS_ERROR_LEVEL","SOFT","ROWS_PER_PAGE","InjectedComponent","reducers","sagas","children","isReducerInjected","useState","isInjected","setInjected","store","useStore","useEffect","injectReducers","useInjectReducers","isSagaInjected","injectSagas","useInjectSagas","Search","FormControl","margin","size","variant","OutlinedInput","endAdornment","InputAdornment","position","IconButton","edge","onClick","onChange","placeholder","type","value","Pagination","memo","count","useRoute","route","router","rowsPerPage","Number","params","limit","page","handleChangePage","useCallback","event","newPage","navigate","name","handleChangeRowsPerPage","newRowPerPage","target","TablePagination","component","labelRowsPerPage","onPageChange","onRowsPerPageChange","Math","floor","rowsPerPageOptions","LOADING_PROVIDER_STATE_NAME","initialState","loadingAreas","slice","createSlice","enable","state","payload","disable","loadingProviderActions","actions","getCurrentAreaLoading","createSelector","area","Boolean","useLoadingProvider","useSelector","CircularPreloader","id","className","cn","root","CircularProgress","TableOfBalancers","bodyData","data","map","row","TableRow","TableCell","ip","port","description","TableContainer","Table","TableHead","styles","cell","TableBody","NameField","input","useField","TextField","fullWidth","label","ParamField","CreateDialog","open","onClose","onSubmit","Dialog","props","handleSubmit","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","BALANCERS_REDUCER_NAME","balancerList","total","setBalancerList","setBalancerTotal","getBalancersSaga","BalancersActions","balancersSelector","balancerListSelector","queryParamsObjToStr","queryParams","Object","entries","param","join","API","middleware","validate","console","warn","config","a","query","request","response","code","isError","errorText","errorRawData","method","url","headers","body","validationSchema","mock","fetch","json","status","ok","this","errorMsg","forEach","mdl","api","schema","s","push","log","errorsSchema","errorCode","additionalErrors","getMockData","balancers","i","delay","ms","Promise","res","setTimeout","BalancerGetRequest","SNACKBAR_REDUCER_NAME","notificationsSelector","notifications","defaultOptions","anchorOrigin","vertical","horizontal","genMsgKey","Date","getTime","random","addKeyToPayload","message","key","createNotification","options","dismissed","show","reducer","notification","prepare","success","error","hardError","HARD","close","closeAll","remove","filter","snackbarActions","worker","watcher","put","GET_BALANCERS_TABLE","call","Error","batchActions","takeLatest","BalancersPage","openDialog","setOpenDialog","openDialogHandler","closeDialogHandler","submitDialogHandler","isLoading","Typography","gutterBottom","controls","startIcon","Add","Paper","length","path","title","Component","BaseComponent","withInject","BalancersReducer","getBalancerListSaga","dispatch","useDispatch","useRouter","balancersRoute","setTitle","document","usePageTitle","project","TableOfDomains","vsList","result","DomainsPage","flags","HostsPage","protocol","weight","round","VirtualServicesPage","routes","domains","hosts","virtualServices","createRouter","defaultRoute","queryParamsMode","usePlugin","browserPlugin","loggerPlugin","onTransitionStart","toState","fromState","getOptions","oldProject","oldCluster","cluster","newProject","newCluster","router5Middleware","rootReducers","router5Reducer","snackbarReducer","loadingProviderReducer","extraMiddlewares","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","composeWithDevTools","applyMiddleware","combineReducers","originalCreateStore","injectedReducers","injectedSagas","injectingReducers","justInjectingReducers","keys","reducerName","replaceReducer","injectingSagas","injectedKeys","run","createStore","batchDispatchMiddleware","theme","createTheme","palette","mode","primary","main","secondary","CloseButton","notificationKey","deps","useMemo","bindActionCreators","useActions","handleClick","CloseOutlined","icon","displayed","Notifications","useSnackbar","enqueueSnackbar","closeSnackbar","includes","reason","myKey","onExited","action","PageBuilder","routeName","routeSegments","split","currentRoute","routeList","segment","foundRoute","find","item","lastNode","reduceRight","Child","errorChecker","parent","content","isValidElement","fallback","ErrorBoundaryWrapper","routerSubscription","subscribe","previousRoute","setState","_nextProps","nextState","errorInfo","unsubscribe","Box","alignItems","display","flexDirection","height","justifyContent","ErrorBoundary","withRouter","isModifierPressed","metaKey","shiftKey","ctrlKey","useLinkOnClick","preventDefault","args","Logo","navigateToDefault","defaultPath","buildPath","Link","logo","href","tabIndex","underline","MenuItem","ListItemButton","selected","ListItemText","secondaryText","primaryText","SideMenu","List","disablePadding","Divider","PageLayout","header","ConnectedPage","start","ROOT_ELEMENT","getElementById","App","StrictMode","ThemeProvider","maxSnack","ReactDOM","render"],"mappings":"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","file":"static/js/main.9f50e4d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"page-layout_root__WIj4l\",\"header\":\"page-layout_header__2VdHP\",\"content\":\"page-layout_content__2Hdwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"page_controls__41BDv\",\"body\":\"page_body__2372u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"table-of-domains_root__2VS1k\",\"Mui-active\":\"table-of-domains_Mui-active__1p_UL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"table-of-hosts_root__-WPcf\",\"Mui-active\":\"table-of-hosts_Mui-active__1F9lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"table-of-balancer_root__2avGu\",\"Mui-active\":\"table-of-balancer_Mui-active__13Cgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"close-button_icon__u5Al6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__23sQT\",\"Mui-active\":\"logo_Mui-active__DsYH-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryText\":\"menu-item_primaryText__1Tnf-\",\"secondaryText\":\"menu-item_secondaryText__rCrqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"circular-preloader_root__3KIS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"page_controls__2qbda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"page_controls__22DP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"page_controls__1SwWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"side-menu_root__p15Hm\"};","export enum NotificationsErrorLevel {\n  HARD,\n  SOFT,\n}\n","import { NotificationsErrorLevel } from 'types/global';\n\nexport const MAX_SNACK_COUNT = 5;\nexport const NOTIFICATIONS_ERROR_LEVEL = NotificationsErrorLevel.SOFT;\nexport const INIT_PAGE_LIMIT = 10;\nexport const ROWS_PER_PAGE = [5, 10, 25];\n","export enum LoadersDict {\n  GET_BALANCERS_TABLE = 'GET_BALANCERS_TABLE',\n}\n","import { useInjectReducers, useInjectSagas } from 'store/hooks';\n\nexport const InjectedComponent = ({ reducers, sagas, children }: any) => {\n  const isReducerInjected = useInjectReducers(reducers);\n  const isSagaInjected = useInjectSagas(sagas);\n\n  return isReducerInjected && isSagaInjected ? children : null;\n};\n","import { Reducer } from 'redux';\nimport { useStore } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { RichStore } from '../types';\n\nconst useInjectReducers = (reducers: Record<string, Reducer>): boolean => {\n  const [isInjected, setInjected] = useState<boolean>(false);\n  const store = useStore() as RichStore;\n  useEffect(() => {\n    store.injectReducers(reducers);\n    setInjected(true);\n  }, [reducers, store]);\n\n  return isInjected;\n};\n\nexport { useInjectReducers };\n","import { Saga } from 'redux-saga';\nimport { useStore } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { RichStore } from '../types';\n\nexport const useInjectSagas = (sagas: Record<string, Saga>): boolean => {\n  const [isInjected, setInjected] = useState<boolean>(false);\n  const store = useStore() as RichStore;\n  useEffect(() => {\n    store.injectSagas(sagas);\n    setInjected(true);\n  }, [sagas, store]);\n\n  return isInjected;\n};\n","import React from 'react';\nimport { FormControl, IconButton, InputAdornment, OutlinedInput } from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\n\nexport const Search = () => {\n  return (\n    <FormControl margin=\"none\" size=\"small\" variant=\"outlined\">\n      <OutlinedInput\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton edge=\"end\" onClick={() => {}}>\n              <SearchIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n        onChange={() => {}}\n        placeholder=\"Поиск\"\n        type=\"text\"\n        value=\"\"\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, memo } from 'react';\nimport { TablePagination } from '@mui/material';\nimport { useRoute } from 'react-router5';\nimport { INIT_PAGE_LIMIT, ROWS_PER_PAGE } from 'constants/ui';\n\ntype Props = {\n  count: number;\n};\n\nexport const Pagination = memo(({ count }: Props) => {\n  const { route, router } = useRoute();\n  const rowsPerPage: number = Number(route.params.limit) || INIT_PAGE_LIMIT;\n  const page: number = Number(route.params.page) || 0;\n\n  const handleChangePage = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n      router.navigate(route.name, {\n        ...route.params,\n        page: newPage,\n      });\n    },\n    [route.name, route.params, router],\n  );\n\n  const handleChangeRowsPerPage = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      const newRowPerPage = event.target.value;\n      router.navigate(route.name, {\n        ...route.params,\n        limit: newRowPerPage,\n      });\n    },\n    [route.name, route.params, router],\n  );\n\n  return (\n    <TablePagination\n      component=\"div\"\n      count={count}\n      labelRowsPerPage=\"Строк на странице\"\n      onPageChange={handleChangePage}\n      onRowsPerPageChange={handleChangeRowsPerPage}\n      page={Math.floor(count / rowsPerPage) >= page ? page : Math.floor(count / rowsPerPage)}\n      rowsPerPage={rowsPerPage}\n      rowsPerPageOptions={ROWS_PER_PAGE}\n    />\n  );\n});\n","export const LOADING_PROVIDER_STATE_NAME = 'LoadingProviderState';\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { LoadersDict } from '../loaders-dict';\nimport { LoadingProviderState } from './types';\nimport { LOADING_PROVIDER_STATE_NAME } from './constants';\n\nexport const initialState: LoadingProviderState = {\n  loadingAreas: {},\n};\n\nconst slice = createSlice({\n  name: LOADING_PROVIDER_STATE_NAME,\n  initialState,\n  reducers: {\n    enable: (state, { payload }: PayloadAction<LoadersDict>) => ({\n      ...state,\n      loadingAreas: {\n        ...state.loadingAreas,\n        [payload]: true,\n      },\n    }),\n    disable: (state, { payload }: PayloadAction<LoadersDict>) => ({\n      ...state,\n      loadingAreas: {\n        ...state.loadingAreas,\n        [payload]: false,\n      },\n    }),\n  },\n});\n\nexport const loadingProviderActions = slice.actions;\nexport default slice.reducer;\n","import { createSelector } from 'reselect';\nimport { initialState } from './slice';\nimport { LOADING_PROVIDER_STATE_NAME } from './constants';\nimport { LoadingProviderState, LoadingProviderStatePart } from './types';\nimport { LoadersDict } from '../loaders-dict';\n\nexport const LoadingProviderStateSelector = (store: LoadingProviderStatePart): LoadingProviderState =>\n  store[LOADING_PROVIDER_STATE_NAME] || initialState;\n\nexport const getCurrentAreaLoading = createSelector(\n  [LoadingProviderStateSelector, (state: any, area: LoadersDict | undefined) => area],\n  ({ loadingAreas }: LoadingProviderState, area) => Boolean(area && loadingAreas[area]),\n);\n","import { useSelector } from 'react-redux';\nimport { LoadersDict } from '../loaders-dict';\nimport { getCurrentAreaLoading, LoadingProviderStatePart } from '../_redux';\n\nexport const useLoadingProvider = (area?: LoadersDict): boolean => {\n  return useSelector((state: LoadingProviderStatePart) => getCurrentAreaLoading(state, area));\n};\n","import React, { memo } from 'react';\nimport { CircularProgress } from '@mui/material';\nimport cn from './index.module.scss';\n\ntype PropsType = {\n  id?: string;\n};\n\nexport const CircularPreloader = memo(({ id }: PropsType) => {\n  return (\n    <div className={cn.root} id={id}>\n      <CircularProgress />\n    </div>\n  );\n});\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\ntype Balancer = {\n  name: string;\n  ip: string;\n  port: number;\n  description: string;\n};\n\ntype BalancerList = Array<Balancer>;\n\ntype Props = {\n  data: BalancerList;\n};\n\nexport const TableOfBalancers = ({ data }: Props) => {\n  const bodyData = data.map(row => (\n    <TableRow key={row.name}>\n      <TableCell>{row.name}</TableCell>\n      <TableCell>{row.ip}</TableCell>\n      <TableCell>{row.port}</TableCell>\n      <TableCell>{row.description}</TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer>\n      <Table /* className={cn(styles.root, styles['Mui-active'])} */>\n        <TableHead>\n          <TableRow>\n            <TableCell className={cn(styles.cell, styles['Mui-active'])}>Название</TableCell>\n            <TableCell className={cn(styles.cell, styles['Mui-active'])}>ip</TableCell>\n            <TableCell className={cn(styles.cell, styles['Mui-active'])}>port</TableCell>\n            <TableCell className={cn(styles.cell, styles['Mui-active'])}>Описание</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{bodyData}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import React, { memo } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Form, FormProps, useField } from 'react-final-form';\n\ntype CreateFormData = {\n  name: string;\n  param1: string;\n};\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (formData: CreateFormData) => void;\n};\n\nconst NameField = () => {\n  const { input } = useField('name', {});\n\n  return (\n    <TextField\n      fullWidth\n      label=\"Название балансировщика\"\n      margin=\"dense\"\n      name={input.name}\n      onChange={input.onChange}\n      size=\"small\"\n      value={input.value}\n      variant=\"outlined\"\n    />\n  );\n};\n\nconst ParamField = () => {\n  const { input } = useField('param1', {});\n\n  return (\n    <TextField\n      fullWidth\n      label=\"Параметр 1\"\n      margin=\"dense\"\n      name={input.name}\n      onChange={input.onChange}\n      size=\"small\"\n      value={input.value}\n      variant=\"outlined\"\n    />\n  );\n};\n\nexport const CreateDialog = memo(({ open, onClose, onSubmit }: Props) => {\n  return (\n    <Dialog onClose={onClose} open={open}>\n      <Form<CreateFormData> onSubmit={onSubmit}>\n        {(props: FormProps) => (\n          <form onSubmit={props.handleSubmit}>\n            <DialogTitle>Создание балансировщика</DialogTitle>\n            <DialogContent>\n              <DialogContentText>Описание того, что нужно вводить для создания балансировщика.</DialogContentText>\n              <NameField />\n              <ParamField />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={onClose}>Отмена</Button>\n              <Button type=\"submit\">Создать</Button>\n            </DialogActions>\n          </form>\n        )}\n      </Form>\n    </Dialog>\n  );\n});\n","export const BALANCERS_REDUCER_NAME = 'balancers';\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { BALANCERS_REDUCER_NAME } from './constants';\nimport { BalancersState, BalancerList } from './types';\n\nexport const initialState: BalancersState = {\n  balancerList: [],\n  total: 0,\n};\n\nconst slice = createSlice({\n  name: BALANCERS_REDUCER_NAME,\n  initialState,\n  reducers: {\n    setBalancerList: (state, { payload: balancerList }: PayloadAction<BalancerList>): BalancersState => ({\n      ...state,\n      balancerList,\n    }),\n    setBalancerTotal: (state, { payload: total }: PayloadAction<number>): BalancersState => ({\n      ...state,\n      total,\n    }),\n    getBalancersSaga: state => state,\n  },\n});\n\nexport const BalancersActions = slice.actions;\n\nexport default slice.reducer;\n","import { createSelector } from 'reselect';\nimport { BalancersStatePart, BalancersState, BalancerList } from './types';\nimport { BALANCERS_REDUCER_NAME } from './constants';\nimport { initialState } from './slice';\n\nexport const balancersSelector = (state: BalancersStatePart): BalancersState =>\n  state[BALANCERS_REDUCER_NAME] || initialState;\n\nexport const balancerListSelector = createSelector(\n  [balancersSelector],\n  ({ balancerList }: BalancersState): BalancerList => balancerList,\n);\n\nexport const totalSelector = createSelector([balancersSelector], ({ total }: BalancersState): number => total);\n","export const queryParamsObjToStr = (queryParams?: Record<string, string | number>) => {\n  return queryParams\n    ? `?${Object.entries(queryParams)\n        .map(param => param.join('='))\n        .join('&')}`\n    : '';\n};\n","import * as s from 'superstruct';\nimport { RequestConfig, Query } from './types';\nimport { queryParamsObjToStr } from './utils/queryParamsObjToString';\n\nclass API {\n  public middleware: Array<(query: Query) => void> = [];\n\n  public validate: (data: any, schema: any) => void = () => {\n    // eslint-disable-next-line no-console\n    console.warn('Схема валидации данных не задана');\n  };\n\n  async request(config: RequestConfig): Promise<Query> {\n    const query: Query = {\n      request: config,\n      response: null,\n      data: null,\n      code: 0,\n      isError: false,\n      errorText: '',\n      errorRawData: null,\n    };\n\n    try {\n      const { method, url, queryParams, headers = {}, body, validationSchema, validate, mock } = config;\n      const params = queryParamsObjToStr(queryParams);\n      if (body) {\n        headers['Content-Type'] = 'application/json;charset=utf-8';\n      }\n\n      if (mock) {\n        query.data = await mock();\n        query.code = 200;\n        query.isError = false;\n      } else {\n        query.response = await fetch(url + params, {\n          method,\n          headers,\n          body,\n        });\n\n        query.data = await query.response.json();\n        query.code = query.response.status;\n        query.isError = !query.response.ok;\n      }\n\n      try {\n        if (validate) {\n          await validate(query.data);\n        } else if (validationSchema) {\n          await this.validate(query.data, validationSchema);\n        }\n      } catch (validationError) {\n        query.isError = true;\n        query.errorText = `${validationError}`;\n        query.errorRawData = validationError;\n\n        return query;\n      }\n\n      query.errorText = query.isError ? query.data.errorMsg : '';\n\n      return query;\n    } catch (err) {\n      query.errorRawData = err;\n      query.isError = true;\n      query.errorText = `${err}`;\n\n      return query;\n    } finally {\n      this.middleware.forEach(mdl => mdl(query));\n    }\n  }\n}\n\nconst api = new API();\napi.validate = (data, schema) => s.assert(data, schema);\n\napi.middleware.push(query => {\n  // eslint-disable-next-line no-console\n  console.log(query);\n});\n\nexport { api };\n","import * as s from 'superstruct';\n\nexport const errorsSchema = {\n  errorCode: s.string(),\n  errorMsg: s.string(),\n  additionalErrors: s.record(s.pattern(s.string(), /^/), s.string()),\n};\n","import { api } from 'api/config';\nimport { RequestConfig } from 'api/types';\nimport * as s from 'superstruct';\nimport { errorsSchema } from 'api/utils/error-schema';\n\n// -------------------------MOCK------------------------------------//\n// -----------------------------------------------------------------//\nconst MOCK_DATA_COUNT = 14;\n\nconst getMockItem = (id: number) => ({\n  name: `name_${id}`,\n  ip: `ip_${id}`,\n  port: 3000 + id,\n  description: `Описание ${id}`,\n});\n\nconst getMockData = (count: number) => {\n  const balancers = [];\n  for (let i = 0; i < count; i += 1) {\n    balancers.push(getMockItem(i));\n  }\n\n  return { balancerList: balancers };\n};\nexport const data = getMockData(MOCK_DATA_COUNT);\n// -----------------------------------------------------------------//\n// -----------------------------------------------------------------//\n\nconst validationSchema = s.partial(\n  s.object({\n    ...errorsSchema,\n    balancerList: s.array(\n      s.object({\n        name: s.string(),\n        ip: s.string(),\n        port: s.number(),\n        description: s.string(),\n      }),\n    ),\n  }),\n);\n\nexport type GetBalancersResponse = s.Infer<typeof validationSchema>;\n\nconst delay = (ms: number) => new Promise(res => setTimeout(res, ms));\nconst config: RequestConfig = {\n  method: 'GET',\n  url: 'https://jsonplaceholder.typicode.com/posts/1',\n  validationSchema,\n  /*  validate: data => {\n    s.assert(data, validationSchema);\n  }, */\n  mock: async () => {\n    await delay(2000);\n\n    return getMockData(MOCK_DATA_COUNT);\n  },\n};\n\nexport const BalancerGetRequest = () => api.request(config);\n","export const SNACKBAR_REDUCER_NAME = 'snackbar';\n","import { SNACKBAR_REDUCER_NAME } from './constants';\nimport { SnackbarStatePartType } from './types';\n\nexport const notificationsSelector = (state: SnackbarStatePartType) => state[SNACKBAR_REDUCER_NAME].notifications || [];\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { OptionsObject } from 'notistack';\nimport { NOTIFICATIONS_ERROR_LEVEL } from 'constants/ui';\nimport { NotificationsErrorLevel } from 'types/global';\nimport { SNACKBAR_REDUCER_NAME } from './constants';\nimport {\n  MessageType,\n  NotificationIdType,\n  NotificationType,\n  ShowActionPayloadType,\n  ShowPreparedActionPayloadType,\n  BaseShowActionPayloadType,\n  BaseShowPreparedActionPayloadType,\n  SnackbarStateType,\n  NotificationOptionsType,\n} from './types';\n\nexport const initialState: SnackbarStateType = {\n  notifications: [],\n};\n\nconst defaultOptions: OptionsObject = {\n  anchorOrigin: {\n    vertical: 'top',\n    horizontal: 'right',\n  },\n};\n\nconst genMsgKey = () => new Date().getTime() + Math.random();\nconst addKeyToPayload = (message: ShowActionPayloadType) => {\n  return {\n    payload: {\n      message,\n      key: genMsgKey(),\n    },\n  };\n};\n\nconst createNotification = (message: MessageType, key: number, options?: NotificationOptionsType): NotificationType => {\n  return {\n    key,\n    message,\n    dismissed: false,\n    options: {\n      ...defaultOptions,\n      ...options,\n    },\n  };\n};\n\nconst slice = createSlice({\n  name: SNACKBAR_REDUCER_NAME,\n  initialState,\n  reducers: {\n    show: {\n      reducer: (\n        state: SnackbarStateType,\n        { payload: { message, options = {}, key } }: PayloadAction<BaseShowPreparedActionPayloadType>,\n      ) => {\n        const notification = createNotification(message, key, {\n          ...defaultOptions,\n          ...options,\n        });\n\n        return {\n          notifications: [...state.notifications, notification],\n        };\n      },\n      prepare: (payload: BaseShowActionPayloadType) => {\n        return {\n          payload: {\n            ...payload,\n            key: genMsgKey(),\n          },\n        };\n      },\n    },\n    success: {\n      reducer: (\n        state: SnackbarStateType,\n        { payload: { message, key } }: PayloadAction<ShowPreparedActionPayloadType>,\n      ) => {\n        const notification = createNotification(message, key, {\n          ...defaultOptions,\n          variant: 'success',\n        });\n\n        return {\n          notifications: [...state.notifications, notification],\n        };\n      },\n      prepare: addKeyToPayload,\n    },\n    error: {\n      reducer: (\n        state: SnackbarStateType,\n        { payload: { message, key } }: PayloadAction<ShowPreparedActionPayloadType>,\n      ) => {\n        const notification = createNotification(message, key, {\n          ...defaultOptions,\n          variant: 'error',\n        });\n\n        return {\n          notifications: [...state.notifications, notification],\n        };\n      },\n      prepare: addKeyToPayload,\n    },\n    hardError: {\n      reducer: (\n        state: SnackbarStateType,\n        { payload: { message, key } }: PayloadAction<ShowPreparedActionPayloadType>,\n      ) => {\n        const notification = createNotification(message, key, {\n          ...defaultOptions,\n          variant: 'error',\n        });\n\n        // Создал отдельный экшен и вызываю его на тех ошибках, которые пока решил не показывать\n        // @ts-ignore\n        if (NOTIFICATIONS_ERROR_LEVEL === NotificationsErrorLevel.HARD) {\n          return {\n            notifications: [...state.notifications, notification],\n          };\n        }\n\n        return state;\n      },\n      prepare: addKeyToPayload,\n    },\n    close(state: SnackbarStateType, { payload: key }: PayloadAction<NotificationIdType>) {\n      return {\n        ...state,\n        notifications: state.notifications.map(notification => ({\n          ...notification,\n          ...(notification.key === key && {\n            dismissed: true,\n          }),\n        })),\n      };\n    },\n    closeAll(state: SnackbarStateType) {\n      return {\n        ...state,\n        notifications: state.notifications.map(notification => ({\n          ...notification,\n          dismissed: true,\n        })),\n      };\n    },\n    remove(state: SnackbarStateType, { payload: key }: PayloadAction<NotificationIdType>) {\n      return {\n        ...state,\n        notifications: state.notifications.filter(notification => notification.key !== key),\n      };\n    },\n  },\n});\n\nexport const snackbarActions = slice.actions;\nexport default slice.reducer;\n","import { put, call, takeLatest } from 'redux-saga/effects';\nimport { batchActions } from 'redux-batched-actions';\nimport { BalancerGetRequest } from 'api/requests/balancers-get';\nimport { snackbarActions } from 'redux/snackbar';\nimport { LoadersDict, loadingProviderActions } from 'components/loading-provider';\nimport { BalancersActions } from '../../slice';\n\nfunction* worker() {\n  try {\n    yield put(loadingProviderActions.enable(LoadersDict.GET_BALANCERS_TABLE));\n    const { data, isError } = yield call(BalancerGetRequest);\n    if (isError) {\n      throw new Error(`Не удалось не удалось получить список балансировщиков`);\n    }\n    yield put(batchActions([BalancersActions.setBalancerList(data.balancerList)]));\n  } catch (error) {\n    yield put(snackbarActions.error(error.message));\n  } finally {\n    yield put(loadingProviderActions.disable(LoadersDict.GET_BALANCERS_TABLE));\n  }\n}\n\nexport function* watcher() {\n  yield takeLatest(BalancersActions.getBalancersSaga, worker);\n}\n","import React, { useCallback, useState } from 'react';\nimport { Button, Typography, Paper } from '@mui/material';\nimport { Add } from '@mui/icons-material';\nimport { Search } from 'components/search';\nimport { Pagination } from 'components/pagination';\nimport { useSelector } from 'react-redux';\nimport { useLoadingProvider, LoadersDict } from 'components/loading-provider/';\nimport { CircularPreloader } from 'components/circular-preloader';\nimport { TableOfBalancers } from './components/table-of-balancer';\nimport styles from './index.module.scss';\nimport { CreateDialog } from './components/create-dialog';\nimport { balancerListSelector } from '../redux';\n\nexport const BalancersPage = () => {\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const openDialogHandler = useCallback(() => {\n    setOpenDialog(true);\n  }, []);\n\n  const closeDialogHandler = useCallback(() => {\n    setOpenDialog(false);\n  }, []);\n  const submitDialogHandler = useCallback(() => {\n    setOpenDialog(false);\n  }, []);\n\n  const balancerList = useSelector(balancerListSelector);\n  const isLoading = useLoadingProvider(LoadersDict.GET_BALANCERS_TABLE);\n\n  return (\n    <>\n      <Typography gutterBottom variant=\"h4\">\n        Балансировщики\n      </Typography>\n      <div className={styles.controls}>\n        <Button onClick={openDialogHandler} startIcon={<Add />} variant=\"outlined\">\n          Добавить балансировщик\n        </Button>\n        <Search />\n      </div>\n      <Paper className={styles.body}>\n        {isLoading && <CircularPreloader />}\n        <TableOfBalancers data={balancerList} />\n        <Pagination count={balancerList.length} />\n        <CreateDialog onClose={closeDialogHandler} onSubmit={submitDialogHandler} open={openDialog} />\n      </Paper>\n    </>\n  );\n};\n","import { Route } from 'types/router';\nimport Page from '.';\n\nconst route: Route = {\n  name: 'balancers',\n  path: '/balancers',\n  title: 'Балансировщики',\n  Component: Page,\n};\n\nexport default route;\n","import React from 'react';\nimport { Reducer } from 'redux';\nimport { Saga } from 'redux-saga';\nimport { InjectedComponent } from './components';\n\ntype Props = {\n  reducers?: Record<string, Reducer>;\n  sagas?: Record<string, Saga>;\n};\n/* eslint-disable react/jsx-props-no-spreading */\nexport const withInject = ({ reducers = {}, sagas = {} }: Props) => {\n  return (BaseComponent: any) => (props: any) => (\n    <InjectedComponent reducers={reducers} sagas={sagas}>\n      <BaseComponent {...props} />\n    </InjectedComponent>\n  );\n};\n/* eslint-enable react/jsx-props-no-spreading */\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useRoute } from 'react-router5';\nimport { withInject } from 'store/withInject';\nimport { BalancersPage } from './page';\nimport BalancersReducer, { BALANCERS_REDUCER_NAME, getBalancerListSaga, BalancersActions } from './redux';\n\nconst Page = () => {\n  const dispatch = useDispatch();\n  const { route } = useRoute();\n  useEffect(() => {\n    dispatch(BalancersActions.getBalancersSaga());\n  }, [dispatch, route.params.limit, route.params.page]);\n\n  return <BalancersPage />;\n};\n\nexport default withInject({\n  reducers: { [BALANCERS_REDUCER_NAME]: BalancersReducer },\n  sagas: { getBalancerListSaga: getBalancerListSaga.watcher },\n})(Page);\n","import { Route } from 'types/router';\nimport Page from '.';\n\nconst route: Route = {\n  name: 'root',\n  path: '/',\n  title: 'Главная',\n  Component: Page,\n};\n\nexport default route;\n","import React, { useEffect } from 'react';\nimport { useRouter } from 'react-router5';\nimport balancersRoute from 'pages/balancers/route';\n\nconst Page = () => {\n  const router = useRouter();\n  useEffect(() => {\n    router.navigate(balancersRoute.name);\n  }, [router]);\n\n  return <div>Root</div>;\n};\n\nexport default Page;\n","import { useRoute } from 'react-router5';\n\nexport const setTitle = (title: string) => {\n  document.title = title;\n};\n\nexport const usePageTitle = (title: string) => {\n  const {\n    route: {\n      params: { project },\n    },\n  } = useRoute();\n  if (project) {\n    setTitle(`${title} / ${project} / WB Balancer`);\n  } else {\n    setTitle(`${title} / WB Balancer`);\n  }\n};\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\ntype Domain = {\n  name: string;\n  description: string;\n  vsList: Array<string>;\n};\n\ntype DomainList = Array<Domain>;\n\ntype Props = {\n  data: DomainList;\n};\n\nexport const TableOfDomains = ({ data }: Props) => {\n  const bodyData = data.map(row => (\n    <TableRow key={row.name}>\n      <TableCell>{row.name}</TableCell>\n      <TableCell>{row.description}</TableCell>\n      <TableCell>{row.vsList.join(' , ')}</TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer>\n      <Table className={cn(styles.root, styles['Mui-active'])}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Название</TableCell>\n            <TableCell>Описание</TableCell>\n            <TableCell>Список VS</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{bodyData}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","const MOCK_DATA_COUNT = 14;\n\nconst getMockItem = (id: number) => ({\n  name: `name_${id}`,\n  description: `Описание ${id}`,\n  vsList: [`vs_${id}_1`, `vs_${id}_2`, `vs_${id}_3`],\n});\n\nconst getMockData = (count: number) => {\n  const result = [];\n  for (let i = 0; i < count; i += 1) {\n    result.push(getMockItem(i));\n  }\n\n  return result;\n};\nexport const data = getMockData(MOCK_DATA_COUNT);\n","import React from 'react';\nimport { Button, Typography } from '@mui/material';\nimport { Add } from '@mui/icons-material';\nimport { Search } from 'components/search';\nimport { Pagination } from 'components/pagination';\nimport { TableOfDomains } from './components/table-of-domains';\nimport { data } from './mock';\nimport styles from './index.module.scss';\n\nexport const DomainsPage = () => {\n  return (\n    <>\n      <Typography variant=\"h4\">Домены</Typography>\n      <br />\n      <div className={styles.controls}>\n        <Button startIcon={<Add />} variant=\"outlined\">\n          Добавить балансировщик\n        </Button>\n        <Search />\n      </div>\n      <TableOfDomains data={data} />\n      <Pagination count={data.length} />\n    </>\n  );\n};\n","import { Route } from 'types/router';\nimport Page from '.';\n\nconst route: Route = {\n  name: 'domains',\n  path: '/domains',\n  title: 'Домены',\n  Component: Page,\n};\n\nexport default route;\n","import React from 'react';\nimport { usePageTitle } from 'hooks/use-page-title';\nimport { DomainsPage } from './page';\n\nconst Page = () => {\n  usePageTitle('Домены');\n\n  return <DomainsPage />;\n};\n\nexport default Page;\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\ntype Host = {\n  name: string;\n  ip: string;\n  flags: string;\n  status: boolean;\n  description: string;\n};\n\ntype HostList = Array<Host>;\n\ntype Props = {\n  data: HostList;\n};\n\nexport const TableOfBalancers = ({ data }: Props) => {\n  const bodyData = data.map(row => (\n    <TableRow key={row.name}>\n      <TableCell>{row.name}</TableCell>\n      <TableCell>{row.ip}</TableCell>\n      <TableCell>{row.flags}</TableCell>\n      <TableCell>{row.status ? 'Активен' : 'Неактивен'}</TableCell>\n      <TableCell>{row.description}</TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer>\n      <Table className={cn(styles.root, styles['Mui-active'])}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Название</TableCell>\n            <TableCell>IP</TableCell>\n            <TableCell>Флаги</TableCell>\n            <TableCell>Статус</TableCell>\n            <TableCell>Описание</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{bodyData}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","const MOCK_DATA_COUNT = 14;\n\nconst getMockItem = (id: number) => ({\n  name: `name_${id}`,\n  ip: `ip_${id}`,\n  flags: `flag_${id}`,\n  status: true,\n  description: `Описание ${id}`,\n});\n\nconst getMockData = (count: number) => {\n  const result = [];\n  for (let i = 0; i < count; i += 1) {\n    result.push(getMockItem(i));\n  }\n\n  return result;\n};\nexport const data = getMockData(MOCK_DATA_COUNT);\n","import React from 'react';\nimport { Button, Typography } from '@mui/material';\nimport { Add } from '@mui/icons-material';\nimport { Search } from 'components/search';\nimport { Pagination } from 'components/pagination';\nimport { TableOfBalancers } from './components/table-of-hosts';\nimport { data } from './mock';\nimport styles from './index.module.scss';\n\nexport const HostsPage = () => {\n  return (\n    <>\n      <Typography variant=\"h4\">Хосты</Typography>\n      <br />\n      <div className={styles.controls}>\n        <Button startIcon={<Add />} variant=\"outlined\">\n          Добавить хост\n        </Button>\n        <Search />\n      </div>\n      <TableOfBalancers data={data} />\n      <Pagination count={data.length} />\n    </>\n  );\n};\n","import { Route } from 'types/router';\nimport Page from '.';\n\nconst route: Route = {\n  name: 'hosts',\n  path: '/hosts',\n  title: 'Хосты',\n  Component: Page,\n};\n\nexport default route;\n","import React from 'react';\nimport { HostsPage } from './page';\n\nconst Page = () => {\n  return <HostsPage />;\n};\n\nexport default Page;\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\ntype VirtualService = {\n  ip: string;\n  port: number;\n  protocol: string;\n  weight: number;\n  flags: string;\n  description: string;\n};\n\ntype VirtualServiceList = Array<VirtualService>;\n\ntype Props = {\n  data: VirtualServiceList;\n};\n\nexport const TableOfBalancers = ({ data }: Props) => {\n  const bodyData = data.map(row => (\n    <TableRow key={row.ip}>\n      <TableCell>{row.ip}</TableCell>\n      <TableCell>{row.port}</TableCell>\n      <TableCell>{row.protocol}</TableCell>\n      <TableCell>{row.weight}</TableCell>\n      <TableCell>{row.flags}</TableCell>\n      <TableCell>{row.description}</TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer>\n      <Table className={cn(styles.root, styles['Mui-active'])}>\n        <TableHead>\n          <TableRow>\n            <TableCell>IP</TableCell>\n            <TableCell>Порт</TableCell>\n            <TableCell>Протокол</TableCell>\n            <TableCell>Вес</TableCell>\n            <TableCell>Флаги</TableCell>\n            <TableCell>Описание</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{bodyData}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","const MOCK_DATA_COUNT = 14;\n\nconst getMockItem = (id: number) => ({\n  ip: `ip_${id}`,\n  port: 3000 + id,\n  protocol: 'tcp',\n  weight: Math.round(Math.random() * 10) / 10,\n  flags: `flag_${id}`,\n  description: `Описание ${id}`,\n});\n\nconst getMockData = (count: number) => {\n  const result = [];\n  for (let i = 0; i < count; i += 1) {\n    result.push(getMockItem(i));\n  }\n\n  return result;\n};\nexport const data = getMockData(MOCK_DATA_COUNT);\n","import React from 'react';\nimport { Button, Typography } from '@mui/material';\nimport { Add } from '@mui/icons-material';\nimport { Search } from 'components/search';\nimport { Pagination } from 'components/pagination';\nimport { TableOfBalancers } from './components/table-of-balancer';\nimport { data } from './mock';\nimport styles from './index.module.scss';\n\nexport const VirtualServicesPage = () => {\n  return (\n    <>\n      <Typography variant=\"h4\">Виртуальные сервисы</Typography>\n      <br />\n      <div className={styles.controls}>\n        <Button startIcon={<Add />} variant=\"outlined\">\n          Добавить виртуальный сервис\n        </Button>\n        <Search />\n      </div>\n      <TableOfBalancers data={data} />\n      <Pagination count={data.length} />\n    </>\n  );\n};\n","import { Route } from 'types/router';\nimport Page from '.';\n\nconst route: Route = {\n  name: 'virtualServices',\n  path: '/virtual-services',\n  title: 'Виртуальные сервисы',\n  Component: Page,\n};\n\nexport default route;\n","import React from 'react';\nimport { VirtualServicesPage } from './page';\n\nconst Page = () => {\n  return <VirtualServicesPage />;\n};\n\nexport default Page;\n","import { Routes } from 'types/router';\nimport root from 'pages/root/route';\nimport balancers from 'pages/balancers/route';\nimport domains from 'pages/domains/route';\nimport hosts from 'pages/hosts/route';\nimport virtualServices from 'pages/virtual-services/route';\n\nexport const routes: Routes = [root, balancers, domains, hosts, virtualServices];\n","import loggerPlugin from 'router5-plugin-logger';\nimport browserPlugin from 'router5-plugin-browser';\nimport { createRouter } from 'router5';\nimport { router5Middleware } from 'redux-router5';\nimport { ROOT_PAGE_NODE } from 'pages/root/node';\nimport { routes } from './routes';\nimport { throwProjectAndClusterPlugin } from './throw-project-and-cluster-plugin';\n\nexport const router = createRouter(routes, {\n  defaultRoute: ROOT_PAGE_NODE,\n  queryParamsMode: 'loose',\n});\nrouter.usePlugin(browserPlugin());\nrouter.usePlugin(loggerPlugin);\nrouter.usePlugin(throwProjectAndClusterPlugin);\nexport const middleware = router5Middleware(router);\n","export const ROOT_PAGE_NODE = 'root';\n","import { Router, State } from 'router5';\n\nexport function throwProjectAndClusterPlugin(router?: Router) {\n  return {\n    onTransitionStart: (toState: State, fromState: State) => {\n      if (!router || !fromState) {\n        return;\n      }\n      const { defaultRoute } = router.getOptions();\n      if (toState.name === defaultRoute) {\n        return;\n      }\n      const { project: oldProject, cluster: oldCluster } = fromState.params;\n      const { project: newProject, cluster: newCluster } = toState.params;\n\n      if (oldProject && oldCluster && !newProject && !newCluster) {\n        // eslint-disable-next-line no-param-reassign\n        toState.params = {\n          project: oldProject,\n          cluster: oldCluster,\n        };\n      }\n    },\n  };\n}\n","import loadingProviderReducer, { LOADING_PROVIDER_STATE_NAME } from 'components/loading-provider';\nimport { SNACKBAR_REDUCER_NAME } from 'redux/snackbar';\nimport snackbarReducer from 'redux/snackbar/slice';\nimport { router5Reducer } from '../router';\n\nexport const rootReducers = {\n  router: router5Reducer,\n  [SNACKBAR_REDUCER_NAME]: snackbarReducer,\n  [LOADING_PROVIDER_STATE_NAME]: loadingProviderReducer,\n};\n","import { batchDispatchMiddleware } from 'redux-batched-actions';\nimport { rootReducers } from './root-reducers';\nimport { rootSagas } from './root-sagas';\nimport { middleware as router5Middleware } from '../router';\nimport { createStore } from './create-store';\n\nexport const store = createStore({\n  reducers: rootReducers,\n  sagas: rootSagas,\n  extraMiddlewares: [router5Middleware, batchDispatchMiddleware],\n});\n","import { applyMiddleware, combineReducers, createStore as originalCreateStore, Middleware, Reducer } from 'redux';\nimport createSagaMiddleware, { Saga } from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { RichStore } from './types';\nimport { injectReducers, injectSagas } from './utils';\n\ntype Config = {\n  reducers?: Record<string, Reducer>;\n  sagas?: Record<string, Saga>;\n  extraMiddlewares?: Middleware[];\n};\n\nexport function createStore({ extraMiddlewares = [], reducers = {}, sagas = {} }: Config): RichStore {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, ...extraMiddlewares];\n  const enhancers = composeWithDevTools(applyMiddleware(...middlewares));\n  const rootReducers = combineReducers(reducers);\n  const store = originalCreateStore(rootReducers, enhancers) as RichStore;\n  store.injectedReducers = reducers;\n  store.injectedSagas = {};\n  store.sagaMiddleware = sagaMiddleware;\n  store.injectReducers = (injectingReducers: Record<string, Reducer>) => {\n    injectReducers(injectingReducers, store);\n  };\n  store.injectSagas = (injectingSagas: Record<string, Saga>) => {\n    injectSagas(injectingSagas, store);\n  };\n\n  store.injectSagas(sagas);\n\n  return store;\n}\n","import { combineReducers, Reducer } from 'redux';\nimport { RichStore } from '../../types';\n\nexport const injectReducers = (reducers: Record<string, Reducer>, store: RichStore) => {\n  const { injectedReducers } = store;\n\n  const justInjectingReducers: Record<string, Reducer> = {};\n\n  Object.keys(reducers)\n    .filter(reducerName => !injectedReducers[reducerName])\n    .forEach(reducerName => {\n      justInjectingReducers[reducerName] = reducers[reducerName];\n    });\n\n  if (Object.keys(justInjectingReducers).length === 0) {\n    return;\n  }\n\n  store.replaceReducer(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    combineReducers({\n      ...injectedReducers,\n      ...justInjectingReducers,\n    }),\n  );\n\n  // eslint-disable-next-line no-param-reassign\n  store.injectedReducers = {\n    ...injectedReducers,\n    ...justInjectingReducers,\n  };\n\n  store.dispatch({\n    type: '@REDUX/INJECT_ASYNC_REDUCERS',\n    payload: {\n      reducers: Object.keys(justInjectingReducers).join(', '),\n    },\n  });\n};\n","import { Saga } from 'redux-saga';\nimport { RichStore } from '../../types';\n\nexport const injectSagas = (sagas: Record<string, Saga>, store: RichStore): void => {\n  const { injectedSagas } = store;\n\n  const injectedKeys: string[] = [];\n\n  Object.keys(sagas).forEach(name => {\n    if (!injectedSagas[name]) {\n      injectedSagas[name] = store.sagaMiddleware.run(sagas[name]);\n      injectedKeys.push(name);\n    }\n  });\n\n  if (injectedKeys.length > 0) {\n    // log to the devtools\n    store.dispatch({\n      type: '@REDUX/INJECT_ASYNC_SAGA',\n      payload: {\n        name: injectedKeys.join(', '),\n      },\n    });\n  }\n};\n","export const rootSagas = {};\n","import { createTheme } from '@mui/material';\nimport { ThemeOptions } from '@mui/material/styles';\n\nexport const theme: ThemeOptions = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#004d40',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n  },\n});\n/* \n\nconst TableBorderColor = '#e0e0e0';\n\ndeclare module '@mui/material/styles' {\n  interface Theme {\n    status: {\n      danger: React.CSSProperties['color'];\n    };\n  }\n  interface ThemeOptions {\n    status: {\n      danger: React.CSSProperties['color'];\n    };\n  }\n}\n\nexport const theme = createTheme({\n  status: {\n    danger: '#e53e3e',\n  },\n  palette: {},\n  components: {\n    MuiTableCell: {\n      styleOverrides: {\n        head: {\n          fontWeight: 700,\n        },\n      },\n    },\n    MuiTable: {\n      styleOverrides: {\n        root: {\n          border: `1px solid ${TableBorderColor}`,\n          borderRadius: '8px',\n        },\n      },\n    },\n    MuiTablePagination: {\n      styleOverrides: {\n        root: {\n          border: `1px solid ${TableBorderColor}`,\n          borderTop: 'none',\n        },\n      },\n    },\n  },\n});\n */\n","import React, { memo, useCallback } from 'react';\nimport { CloseOutlined } from '@mui/icons-material';\nimport { IconButton } from '@mui/material';\nimport { NotificationIdType, snackbarActions } from 'redux/snackbar';\nimport { useActions } from 'hooks/use-actions';\nimport styles from './index.module.scss';\n\ntype PropsType = {\n  notificationKey: NotificationIdType;\n};\n\nexport const CloseButton = memo(({ notificationKey }: PropsType) => {\n  const { close } = useActions({ close: snackbarActions.close });\n  const handleClick = useCallback(() => {\n    close(notificationKey);\n  }, [close, notificationKey]);\n\n  return (\n    <IconButton className={styles.root} onClick={handleClick}>\n      <CloseOutlined className={styles.icon} />\n    </IconButton>\n  );\n});\n","import { useDispatch } from 'react-redux';\nimport { ActionCreatorsMapObject, bindActionCreators } from 'redux';\nimport { DependencyList, useMemo } from 'react';\n\nexport function useActions<T extends ActionCreatorsMapObject>(actions: T, deps?: DependencyList) {\n  const dispatch = useDispatch();\n\n  return useMemo<T>(\n    () => bindActionCreators(actions, dispatch),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps ? [dispatch, ...deps] : [dispatch],\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SnackbarKey, useSnackbar } from 'notistack';\nimport { notificationsSelector } from 'redux/snackbar/selectors';\nimport { NotificationIdType, snackbarActions } from 'redux/snackbar';\nimport { CloseButton } from './_components/close-button';\n\nlet displayed: Array<NotificationIdType> = [];\n\nconst Notifications = () => {\n  const dispatch = useDispatch();\n  const notifications = useSelector(notificationsSelector);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const storeDisplayed = (id: SnackbarKey) => {\n    displayed = [...displayed, id];\n  };\n\n  const removeDisplayed = (id: SnackbarKey) => {\n    displayed = [...displayed.filter(key => id !== key)];\n  };\n\n  useEffect(() => {\n    notifications.forEach(({ key, message, options = {}, dismissed = false }: any) => {\n      if (dismissed) {\n        closeSnackbar(key);\n\n        return;\n      }\n\n      // do nothing if snackbar is already displayed\n      if (displayed.includes(key)) {\n        return;\n      }\n\n      // display snackbar using notistack\n      enqueueSnackbar(<span aria-roledescription={`snackbar-${options.variant}-label`}>{message}</span>, {\n        key,\n        ...options,\n        onClose: (event, reason, myKey) => {\n          if (options.onClose) {\n            options.onClose(event, reason, myKey);\n          }\n        },\n        onExited: (event, myKey) => {\n          // remove this snackbar from redux store\n          dispatch(snackbarActions.remove(myKey));\n          removeDisplayed(myKey);\n        },\n        action: notificationKey => <CloseButton notificationKey={notificationKey} />,\n      });\n\n      // keep track of snackbars that we've displayed\n      storeDisplayed(key);\n    });\n  }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\n\n  return null;\n};\n\nexport default Notifications;\n","import React, { Suspense, ReactElement, isValidElement } from 'react';\nimport { useRoute } from 'react-router5';\nimport { Routes } from 'types/router';\nimport { routes } from 'router/routes';\nimport { usePageTitle } from 'hooks/use-page-title';\n\nexport const PageBuilder = () => {\n  const {\n    route: { name: routeName },\n  } = useRoute();\n  const routeSegments: Array<string> = routeName.split('.');\n\n  const currentRoute: Routes = [];\n  let routeList: Routes = routes;\n  for (let i = 0; i < routeSegments.length; i += 1) {\n    const segment = routeSegments[i];\n    const foundRoute = routeList.find(item => item.name === segment);\n    if (foundRoute) {\n      currentRoute.push(foundRoute);\n      if (foundRoute.children) {\n        routeList = foundRoute.children;\n      }\n    } else {\n      console.error(`Не получилось найти сегмент \"${segment}\"  в маршруте ${routeName}`);\n      break;\n    }\n  }\n  const lastNode = currentRoute[currentRoute.length - 1];\n  if (lastNode?.title) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    usePageTitle(lastNode.title);\n  }\n\n  return currentRoute.reduceRight<ReactElement | null>((page, route) => {\n    const Child = route.Component;\n    let error;\n    if (route.errorChecker) {\n      error = route.errorChecker();\n    }\n    const parent = error || <Child content={page} />;\n    if (isValidElement(parent)) {\n      return <Suspense fallback={null}>{parent}</Suspense>;\n    }\n    console.error(parent);\n    throw new Error(`Can't build page. Invalid react element`);\n  }, null);\n};\n","import React, { Component, ReactNode, ReactNodeArray } from 'react';\nimport { Box } from '@mui/material';\nimport { withRouter } from 'react-router5';\nimport { Router, Subscription } from 'router5';\nimport { Unsubscribe } from 'router5/dist/types/base';\n\ntype PropsType = {\n  children: ReactNode | ReactNodeArray | null;\n  router: Router;\n};\n\ntype StateType = {\n  error: boolean;\n};\nclass ErrorBoundaryWrapper extends Component<PropsType, StateType> {\n  private routerSubscription: Subscription | Unsubscribe | undefined;\n\n  constructor(props: PropsType) {\n    super(props);\n\n    this.state = {\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    this.routerSubscription = this.props.router.subscribe(({ route, previousRoute }) => {\n      if (route.name !== previousRoute.name) {\n        this.setState({\n          error: false,\n        });\n      }\n    });\n  }\n\n  shouldComponentUpdate(_nextProps: any, nextState: any) {\n    return this.state.error !== nextState.error;\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(errorInfo);\n\n    this.setState({\n      error: true,\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.routerSubscription) {\n      if (typeof this.routerSubscription === 'function') {\n        this.routerSubscription();\n      } else {\n        this.routerSubscription.unsubscribe();\n      }\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" height=\"50%\" justifyContent=\"center\">\n          <h1>Что-то пошло не так</h1>\n        </Box>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst ErrorBoundary = withRouter<{ children: ReactNode }>(ErrorBoundaryWrapper);\nexport { ErrorBoundary };\n","import { MouseEvent } from 'react';\n\nexport const isModifierPressed = (event: MouseEvent) => event.metaKey || event.shiftKey || event.ctrlKey;\n","import { DependencyList, useCallback } from 'react';\nimport { isModifierPressed } from 'utils/is-modifier-pressed';\n\nexport function useLinkOnClick(action: Function, deps?: DependencyList) {\n  return useCallback(\n    (event, ...args) => {\n      if (isModifierPressed(event)) {\n        return;\n      }\n      event.preventDefault();\n      action(event, ...args);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps ? [...deps] : [],\n  );\n}\n","import React, { useMemo } from 'react';\nimport { Link } from '@mui/material';\nimport { useLinkOnClick } from 'hooks/use-on-modified-click';\nimport { useRouter } from 'react-router5';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\ntype Props = {\n  className?: string;\n};\n\nexport const Logo = ({ className }: Props) => {\n  const router = useRouter();\n\n  const handleClick = useLinkOnClick(() => {\n    router.navigateToDefault();\n  }, [router]);\n\n  const defaultPath = useMemo(() => {\n    const { defaultRoute } = router.getOptions();\n    if (defaultRoute) {\n      return router.buildPath(defaultRoute);\n    }\n  }, [router]);\n\n  return (\n    <Link\n      className={cn(styles.logo, className, styles['Mui-active'])}\n      // color=\"inherit\"\n      href={defaultPath}\n      onClick={handleClick}\n      tabIndex={0}\n      underline=\"none\"\n      variant=\"h5\"\n    >\n      WB Balancer\n    </Link>\n  );\n};\n","import React, { useMemo } from 'react';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useRoute, useRouter } from 'react-router5';\nimport { useLinkOnClick } from 'hooks/use-on-modified-click';\nimport styles from './index.module.scss';\n\ntype Props = {\n  title: string;\n  routeName: string;\n  secondary?: boolean;\n};\n\nexport const MenuItem = ({ title, routeName, secondary }: Props) => {\n  const {\n    route: { name },\n  } = useRoute();\n  const router = useRouter();\n\n  const handleClick = useLinkOnClick(() => {\n    router.navigate(routeName);\n  }, [router]);\n\n  const path = useMemo(() => router.buildPath(routeName), [routeName, router]);\n\n  return (\n    <ListItemButton component=\"a\" href={path} onClick={handleClick} selected={routeName === name}>\n      <ListItemText className={secondary ? styles.secondaryText : styles.primaryText} primary={title} />\n    </ListItemButton>\n  );\n};\n","import React from 'react';\nimport balancers from 'pages/balancers/route';\nimport domains from 'pages/domains/route';\nimport hosts from 'pages/hosts/route';\nimport virtualServices from 'pages/virtual-services/route';\nimport { List } from '@mui/material';\nimport Divider from '@mui/material/Divider';\nimport { MenuItem } from './components/menu-item';\nimport styles from './index.module.scss';\n\nexport const SideMenu = () => {\n  return (\n    <List className={styles.root} component=\"nav\" disablePadding>\n      <MenuItem routeName={balancers.name} title={balancers.title || ''} />\n      <Divider />\n      <MenuItem routeName={virtualServices.name} secondary title={virtualServices.title || ''} />\n      <MenuItem routeName={hosts.name} secondary title={hosts.title || ''} />\n      <Divider />\n      <MenuItem routeName={domains.name} title={domains.title || ''} />\n    </List>\n  );\n};\n","import React, { PropsWithChildren } from 'react';\nimport { Logo } from 'components/logo';\nimport { SideMenu } from 'components/side-menu';\nimport styles from './index.module.scss';\n\nexport const PageLayout = ({ children }: PropsWithChildren<{}>) => {\n  return (\n    <div className={styles.root}>\n      <Logo />\n      <div className={styles.header}>{/* <UserButton /> */}</div>\n      <SideMenu />\n      <div className={styles.content}>{children}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport Notifications from 'components/notifications';\nimport { PageBuilder } from 'components/page-builder';\nimport { ErrorBoundary } from 'components/error-boundary';\nimport { PageLayout } from 'components/page-layout';\n\nexport const ConnectedPage = () => {\n  return (\n    <>\n      <ErrorBoundary>\n        <PageLayout>\n          <PageBuilder />\n        </PageLayout>\n        <Notifications />\n      </ErrorBoundary>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { RouterProvider } from 'react-router5';\nimport { ThemeProvider } from '@mui/material';\nimport { MAX_SNACK_COUNT } from 'constants/ui';\nimport { SnackbarProvider } from 'notistack';\nimport { router } from './router';\nimport { store } from './store';\nimport { theme } from './styles/theme';\nimport { ConnectedPage } from './components/connected-page';\nimport 'normalize.css';\nimport './styles/global.scss';\n\nrouter.start();\n\nconst ROOT_ELEMENT = document.getElementById('root');\nconst App = () => (\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <SnackbarProvider maxSnack={MAX_SNACK_COUNT}>\n          <RouterProvider router={router}>\n            <ConnectedPage />\n          </RouterProvider>\n        </SnackbarProvider>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>\n);\n\nReactDOM.render(<App />, ROOT_ELEMENT);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"table-of-balancer_cell__1ry1I\",\"Mui-active\":\"table-of-balancer_Mui-active__3ICeI\"};"],"sourceRoot":""}